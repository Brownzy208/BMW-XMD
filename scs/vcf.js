const {
  adams
} = require("../Ibrahim/adams");
const fs = require('fs-extra');

adams({
  nomCom: 'vcf2',
  categorie: "Group",
  reaction: '⚪'
}, async (zk, message, context) => {
  const { ms, repondre, verifGroupe, verifAdmin } = context;

  if (!verifAdmin) {
    repondre("You are not an admin here!");
    return;
  }

  if (!verifGroupe) {
    repondre("This command works in groups only");
    return;
  }

  try {
    let groupMetadata = await zk.groupMetadata(message.key.remoteJid);

    if (groupMetadata.participants.length > 1030) {
      repondre("The group has more than 1030 members. Export limited to the first 1030.");
    }

    let vCardData = "";
    let contactIndex = 1;

    for (let participant of groupMetadata.participants.slice(0, 1030)) {
      const phoneNumber = participant.id.split('@')[0];
      vCardData += `BEGIN:VCARD\nVERSION:3.0\nFN:🚀 ʙᴡᴍ xᴍᴅ 🚀 ${contactIndex++}\nTEL;type=CELL;type=VOICE;waid=${phoneNumber}:+${phoneNumber}\nEND:VCARD\n`;
    }

    repondre(`⏳ Hold on, *BWM-MD* is compiling ${groupMetadata.participants.length} contacts into a VCF file...`);

    const filePath = `./${groupMetadata.subject.replace(/[^a-zA-Z0-9]/g, '_')}_contacts.vcf`;
    await fs.writeFileSync(filePath, vCardData.trim());

    await zk.sendMessage(message.key.remoteJid, {
      document: fs.readFileSync(filePath),
      mimetype: 'text/vcard',
      fileName: `${groupMetadata.subject}_contacts.VCF`,
      caption: `🚀 *VCF for ${groupMetadata.subject}* 🚀\n📱 *Total Contacts*: ${contactIndex - 1}\n🎉 Generated by *Ibrahim Adams Media*!\n\n✨ Keep shining with *BWM-MD*! ✨`
    });

    fs.unlinkSync(filePath);
  } catch (error) {
    console.error("Error processing the VCF command:", error);
    repondre("❌ An error occurred while compiling contacts. Please check the logs.");
  }
});
