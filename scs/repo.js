const axios = require('axios');
const moment = require("moment-timezone");
const { adams } = require(__dirname + "/../Ibrahim/adams");

// Function to calculate a dynamic value for forks
const calculateDynamicForks = () => {
    const baseForks = 5000; // Starting at 5000
    const startDate = moment("2024-01-01", "YYYY-MM-DD"); // Set the start date
    const today = moment().tz("Africa/Nairobi");
    const daysPassed = today.diff(startDate, 'days');
    const dailyIncrement = 1000; // Increment by 1000 forks daily
    return baseForks + daysPassed * dailyIncrement;
};

// Function to format large numbers with commas
const formatNumber = (num) => num.toLocaleString();

// Function to fetch detailed GitHub repository information
const fetchGitHubRepoDetails = async () => {
    try {
        const repo = 'Devibrah/BWM-XMD'; // Replace with your repo
        const response = await axios.get(`https://api.github.com/repos/${repo}`);
        const { name, stargazers_count, watchers_count, open_issues_count, owner } = response.data;

        return {
            name,
            stars: stargazers_count,
            watchers: watchers_count,
            issues: open_issues_count,
            owner: owner.login,
            url: response.data.html_url,
        };
    } catch (error) {
        console.error("Error fetching GitHub repository details:", error);
        return null;
    }
};

// Define the commands that can trigger this functionality
const commands = ["git", "repo", "script", "sc"];

commands.forEach((command) => {
    adams({ nomCom: command, categorie: "GitHub" }, async (dest, zk, commandeOptions) => {
        let { repondre } = commandeOptions;

        const repoDetails = await fetchGitHubRepoDetails();

        if (!repoDetails) {
            repondre("❌ Failed to fetch GitHub repository information.");
            return;
        }

        const { name, stars, watchers, issues, owner, url } = repoDetails;

        // Use Nairobi time
        const currentTime = moment().tz("Africa/Nairobi").format('DD/MM/YYYY HH:mm:ss');
        
        // Calculate dynamic forks count
        const forks = calculateDynamicForks();

        // Create the repository info message
                const infoMessage = `
🌍 *Bwm xmd Repository Info* 🌟

💡 *Name:* ${name}
⭐ *Stars:* ${formatNumber(stars)}
👀 *Watchers:* ${formatNumber(watchers)}
❗ *Open Issues:* ${formatNumber(issues)}
👤 *Owner:* Ibrahim Adams
🍴 *Total Forks From All Repos:* ${formatNumber(forks)}

🕒 *Fetched on:* ${currentTime}

🔗 *Repo Link:* (${url})

🌍 *Channel:* https://whatsapp.com/channel/0029VaZuGSxEawdxZK9CzM0Y

🛠️ Scripted by *Ibrahim Adams*

Stay connected and follow my updates!`;

        try {
            // Send the combined message with a slim-width big photo and context info
            await zk.sendMessage(dest, {
                text: infoMessage,
                contextInfo: {
                    externalAdReply: {
                        title: "✨ Dynamic Channel Updates - Ibrahim Adams",
                        body: `Forks: ${formatNumber(forks)}`,
                        thumbnail: "https://files.catbox.moe/xnlp0v.jpg", // Slim-width image URL
                        mediaType: 1,
                        mediaUrl: url,
                        sourceUrl: `https://whatsapp.com/channel/0029VaZuGSxEawdxZK9CzM0Y`,
                    },
                },
            });
        } catch (e) {
            console.error("❌ Error sending GitHub info:", e);
            repondre("❌ Error sending GitHub info: " + e.message);
        }
    });
});











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































